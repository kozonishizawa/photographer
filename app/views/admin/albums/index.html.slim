.p-albums
  .p-albums__inner
    = search_form_for @q, url: admin_albums_path, class: 'l-search' do |f|
      .l-search__item
        = f.search_field :title_or_user_name_cont, placeholder: 'タイトルまたはユーザー名', class: 'l-search__field'
        = f.search_field :photographed_at_gteq, placeholder: '撮影日 "yyyy-mm-dd"', class: 'l-search__field'
        = f.submit class: 'l-search__btn'

    table.l-table
      thread.l-table__thread
        tr.l-table__row
          th.l-table__header = sort_link(@q, :title)
          th.l-table__header = sort_link(@q, :photographed_at)
          th.l-table__header ユーザー名
          th.l-table__header 登録枚数
          th.l-table__header 公開設定
          th.l-table__header 作成日
          th.l-table__header 公開期限
          th.l-table__header
          th.l-table__header
      tbody.l-table__tbody
        - @albums.each do |album|
          tr.l-table__row
            td.l-table__data = link_to album.title, admin_album_path(album), class: 'l-table__title'
            td.l-table__data = album.photographed_at
            td.l-table__data = album.user.name
            td.l-table__data = album.photos.count
            td.l-table__data = album.status_i18n
            td.l-table__data = album.created_at.to_date
            td.l-table__data = album.created_at.to_date + album.open_period
            td.l-table__data = react_component 'album_form', user: album.user.as_json, categories: Album.categories.keys.map {|k| [I18n.t("enums.album.category.#{k}"),k]}.as_json, album: album.as_json
            td.l-table__data = link_to '削除', admin_album_path(album.id), method: :delete, data: { confirm: '削除してよろしいですか？' }, class: 'p-albums__delete'
    .l-pagination
      = paginate @albums
      = page_entries_info @albums

